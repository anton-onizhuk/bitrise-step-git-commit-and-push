#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Git commit and push
summary: |
  Commit changes made by bitrise and push them to the remote repository
description: |
  Commit changes made by bitrise and push them to the remote repository
website: https://github.com/anton-onizhuk/bitrise-step-git-commit-and-push
source_code_url: https://github.com/anton-onizhuk/bitrise-step-git-commit-and-push
support_url: https://github.com/anton-onizhuk/bitrise-step-git-commit-and-push/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: false
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: git
  apt_get:
  - name: git

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - stage_files: "$BITRISE_SOURCE_DIR"
    opts:
      title: Commit files
      summary: A directory or a file to include in commit.
      description: |
        A directory or a file to commit. You can provide a list of pathes like you would normally do using `git add` command. 
        `$BITRISE_SOURCE_DIR` or `.` are commonly used to commit all changes in the project. 
      is_expand: true
      is_required: true
  - repository_url: "$GIT_REPOSITORY_URL"
    opts:
      title: Remote repository URL
      summary: ""
      description: |
        Remote repository URL
      is_expand: true
      is_required: true
  - author: A U Thor <author@example.com>
    opts:
      title: Commit author
      summary: Author's name and email recorded in commit metadata.
      description: |
        Author's name and email recorded in commit metadata. Should have standart format as `A U Thor <author@example.com>`.
      is_expand: true
      is_required: true
  - commit_message: no message
    opts:
      title: Commit message
      summary: Commit message
      description: |
        Commit message
      is_expand: true
      is_required: true
  - tag:
    opts:
      category: Tag
      title: "Tag"
      summary: Tag to add before push
      description: |
        Tag to add before push. Leave empty to add no tag.
      is_expand: true
      is_required: false
  - tag_message:
    opts:
      category: Tag
      title: "Tag message"
      summary: The message associated to the tag in case you want an annoted tag 
      description: |
        The message associated to the tag in case you want an annoted tag.
        Ignored if `tag` is not specified
      is_expand: true
      is_required: false
  - add_flags: "--verbose"
    opts:
      category: Debug
      title: add command flags
      summary: Additional flags to use with `add` command
      description: |
        Additional flags to use with `add` command. `add` command composed as following:
        `git add ${add_flags} -- ${stage_files}`
        
        With default value command takes following form:
        `git add --verbose -- ${stage_files}`
      is_expand: true
      is_required: false
  - commit_flags: --verbose
    opts:
      category: Debug
      title: commit command flags
      summary: Additional flags to use with `commit` command
      description: |
        Additional flags to use with `commit` command. `commit` command composed as following:
        `git commit ${commit_flags} --author "${author}" --mesage "${commit_message}"`

        With default value command takes following form:
        `git commit --verbose --author "${author}" --mesage "${commit_message}"`
      is_expand: true
      is_required: false
  - push_flags: --verbose
    opts:
      title: push command flags
      category: Debug
      summary: Additional flags to use with `push` command
      description: |
        Additional flags to use with `push` command. `push` command composed as following:
        `git push ${push_flags} ${tag_flag} "${repository}" ${refspec}`

        With default values `push` command takes following form:
        `git push --verbose "${repository}" $BITRISE_GIT_BRANCH`
      is_expand: true
      is_required: false
  - refspec: "$BITRISE_GIT_BRANCH"
    opts:
      category: Debug
      title: push command refspec
      summary: Refspec used in `push` command
      description: |
        Refspec used in `push` command. `push` command composed as following:
        `git push ${push_flags} ${tag_flag} "${repository}" ${refspec}`

        With default value command takes following form:
        `git push --verbose "${repository}" $BITRISE_GIT_BRANCH`
      is_expand: true
      is_required: false